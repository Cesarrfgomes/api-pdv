CREATE TABLE TABVENDEDOR (
       CODVENDEDOR NUMBER PRIMARY KEY,
       NOME VARCHAR(150) NOT NULL,
       EMAIL VARCHAR(150) NOT NULL,
       
);

select rowid, tabvendedor.* from tabvendedor;

ALTER TABLE TABVENDEDOR MODIFY PROXIMONUMPED NUMBER(8);

SELECT * FROM TABVENDEDOR;

CREATE SEQUENCE TABVENDEDOR_SEQ START WITH 1 INCREMENT BY 1;

CREATE TRIGGER TK_VENDEDOR_CODVENDEDOR
BEFORE INSERT ON TABVENDEDOR
FOR EACH ROW
  BEGIN
    IF :NEW.CODVENDEDOR IS NULL THEN
        SELECT TABVENDEDOR_SEQ.NEXTVAL INTO :NEW.CODVENDEDOR FROM DUAL;
    END IF;
  END;
/


CREATE TABLE TABUSUARIO (
       CODUSUR NUMBER PRIMARY KEY,
       NOME VARCHAR(150) NOT NULL,
       EMAIL VARCHAR(150) UNIQUE NOT NULL,
       USUARIO VARCHAR(50) UNIQUE NOT NULL,
       SENHA VARCHAR(200) NOT NULL,
       CPF VARCHAR(14) UNIQUE,
       TIPOFUNC VARCHAR(2) CHECK (TIPOFUNC IN ('M', 'F', 'V')),
       CODVENDEDOR NUMBER DEFAULT NULL,

       CONSTRAINT FK_CODVENDEDOR FOREIGN KEY (CODVENDEDOR) REFERENCES TABVENDEDOR(CODVENDEDOR)
);

ALTER TABLE TABUSUARIO ADD DTINCLUSAO DATE DEFAULT TRUNC(SYSDATE);

ALTER TABLE TABUSUARIO ADD DTEXCLUSAO DATE;

ALTER TABLE TABUSUARIO ADD MOTIVOINATIVACAO VARCHAR2(2000);

ALTER TABLE TABUSUARIO ADD SITUACAO VARCHAR2(1) DEFAULT 'A';

select ROWID, TABUSUARIO.* from tabusuario;

COMMENT ON COLUMN TABUSUARIO.TIPOFUNC IS 'M - MOTORISTA; F - FUNCIONARIO; V - VENDEDOR';

CREATE SEQUENCE TABUSUARIO_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TK_USUARIO_CODUSUR
BEFORE INSERT ON TABUSUARIO
FOR EACH ROW
  BEGIN
    IF :NEW.CODUSUR IS NULL THEN
      SELECT TABUSUARIO_SEQ.NEXTVAL INTO :NEW.CODUSUR FROM DUAL;
    END IF;
  END;
/

CREATE TABLE TABCLIENTE (
    CODCLI NUMBER PRIMARY KEY,
    CODVENDEDOR NUMBER NOT NULL,
    NOME VARCHAR2(150) NOT NULL,
    BLOQUEIO VARCHAR2(10) CHECK (BLOQUEIO IN ('S', 'N')) DEFAULT 'N',
    EMAIL VARCHAR2(150) UNIQUE,
    CGCENT VARCHAR(18) UNIQUE NOT NULL,

    FOREIGN KEY (CODVENDEDOR) REFERENCES TABVENDEDOR(CODVENDEDOR)
);

ALTER TABLE TABCLIENTE MODIFY BLOQUEIO CHAR(1) DEFAULT 'N';

ALTER TABLE TABCLIENTE ADD CONSTRAINT chk_bloqueio CHECK (BLOQUEIO IN ('S', 'N'));

ALTER TABLE TABCLIENTE ADD CODFUNCCADASTRO NUMBER(8);

ALTER TABLE TABCLIENTE ADD CODFUNCULTALT NUMBER(8);

select rowid, tabcliente.* from tabcliente;

ALTER TABLE TABCLIENTE ADD CONSTRAINT FK_CODFUNCCADASTRO FOREIGN KEY (CODFUNCCADASTRO) REFERENCES TABUSUARIO(CODUSUR);

ALTER TABLE TABCLIENTE ADD FOREIGN KEY (CODFUNCULTALT) REFERENCES TABUSUARIO(CODUSUR);

COMMENT ON COLUMN TABCLIENTE.BLOQUEIO IS 'S - SIM; N -N�O';

COMMENT ON COLUMN TABCLIENTE.CGCENT IS 'CPF OU CNPJ';

CREATE SEQUENCE TABCLIENTE_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TK_CLIENTE_CODCLI
BEFORE INSERT ON TABCLIENTE
FOR EACH ROW
BEGIN
    IF :NEW.CODCLI IS NULL THEN
        SELECT TABCLIENTE_SEQ.NEXTVAL INTO :NEW.CODCLI FROM dual;
    END IF;
END;
/

CREATE TABLE TABCARGA (
       NUMCAR NUMBER PRIMARY KEY,
       CODUSUR NUMBER NOT NULL,
       DTSAIDA TIMESTAMP NOT NULL,
       DTFECHA TIMESTAMP NOT NULL,
       TOTPESO BINARY_DOUBLE DEFAULT NULL,

       FOREIGN KEY (CODUSUR) REFERENCES TABUSUARIO(CODUSUR)
);

CREATE SEQUENCE TABCARGA_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TK_CARGA_NUMCAR
BEFORE INSERT ON TABCARGA
FOR EACH ROW
  BEGIN
    IF :NEW.NUMCAR IS NULL THEN
      SELECT TaBCARGA_SEQ.NEXTVAL INTO :NEW.NUMCAR FROM DUAL;
    END IF;
  END;
/

CREATE TABLE TABPRODUTO (
       CODPROD NUMBER PRIMARY KEY,
       DESCRICAO VARCHAR(250) NOT NULL,
       CODBARRAS VARCHAR(14)
);

ALTER TABLE TABPRODUTO ADD CODFUNCCADASTRO NUMBER(8);

ALTER TABLE TABPRODUTO ADD CODFUNCULTALT NUMBER(8);

ALTER TABLE TABPRODUTO ADD CONSTRAINT FK_CODFUNCCADASTRO_PROD FOREIGN KEY (CODFUNCCADASTRO) REFERENCES TABUSUARIO(CODUSUR);

ALTER TABLE TABPRODUTO ADD CONSTRAINT FK_CODFUNCULTALT_PROD FOREIGN KEY (CODFUNCULTALT) REFERENCES TABUSUARIO(CODUSUR);

ALTER TABLE TABPRODUTO ADD NCM NUMBER(10);

ALTER TABLE TABPRODUTO ADD PUNITARIO NUMBER(10,2);

ALTER TABLE TABPRODUTO MODIFY ATIVO VARCHAR2(1) DEFAULT 'S';

CREATE INDEX idx_codbarras ON TABPRODUTO(CODBARRAS);

CREATE SEQUENCE TABPRODUTO_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TK_PRODUTO_CODPRO
BEFORE INSERT ON TABPRODUTO
FOR EACH ROW
  BEGIN
    IF :NEW.CODPROD IS NULL THEN
      SELECT TBPRODUTO_SEQ.NEXTVAL INTO :NEW.CODPROD FROM DUAL;
    END IF;
  END;
/

CREATE TABLE TBEST (
       CODPROD NUMBER,
       QT BINARY_DOUBLE,
       QTAVARIA BINARY_DOUBLE,

       PRIMARY KEY (CODPROD),
       FOREIGN KEY (CODPROD) REFERENCES TABPRODUTO (CODPROD)
);

CREATE TABLE TABCOBRANCA (
       CODCOB NUMBER PRIMARY KEY,
       DESCRICAO VARCHAR(100) NOT NULL
);

CREATE SEQUENCE TABCOBRANCA_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TK_COBRANCA_CODCOB
BEFORE INSERT ON TABCOBRANCA
FOR EACH ROW
  BEGIN
    IF :NEW.CODCOB IS NULL THEN
      SELECT TABCOBRANCA_SEQ.NEXTVAL INTO :NEW.CODCOB FROM DUAL;
    END IF;
  END;
/

CREATE TABLE TABPLANOPAG(
       CODPLPAG NUMBER PRIMARY KEY,
       CODCOB NUMBER NOT NULL,
       DESCRICAO VARCHAR(100) NOT NULL,
       VALOR_MINIMO BINARY_DOUBLE,

       CONSTRAINT FK_CODCOB FOREIGN KEY (CODCOB) REFERENCES TABCOBRANCA(CODCOB)
);

CREATE SEQUENCE TABPLANOPAG_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TK_PLANOPAG_CODPLPAG
BEFORE INSERT ON TABPLANOPAG
FOR EACH ROW
  BEGIN
    IF :NEW.CODPLPAG IS NULL THEN
      SELECT TABPLANOPAG_SEQ.NEXTVAL INTO :NEW.CODPLPAG FROM DUAL;
    END IF;
  END;
/


CREATE TABLE TABPEDIDO (
       NUMPED NUMBER(10) PRIMARY KEY,
       VLTOTAL NUMBER(16,3) DEFAULT NULL,
       CODVENDEDOR NUMBER NOT NULL,
       CODCLI NUMBER NOT NULL,
       POSICAO CHAR(1) CHECK(POSICAO IN ('L', 'B', 'M', 'C')),
       CODCOB NUMBER NOT NULL,
       CODPLPAG NUMBER NOT NULL,
       CODEMITENTE NUMBER NOT NULL,
       DTINCLUSAO DATE NOT NULL,
       DTMON DATE,
       DTFAT DATE,
       DTCANCEL DATE,
       NUMCAR NUMBER(8),
       NUMITENS NUMBER(3),
       CODFUNCFAT NUMBER(8),
       CODFUNCCANCEL NUMBER(8),

       FOREIGN KEY (CODVENDEDOR) REFERENCES TABVENDEDOR(CODVENDEDOR),
       FOREIGN KEY (CODCLI) REFERENCES TABCLIENTE(CODCLI),
       FOREIGN KEY (CODCOB) REFERENCES TABCOBRANCA(CODCOB),
       CONSTRAINT FK_CODPLPAG FOREIGN KEY (CODPLPAG) REFERENCES TABPLANOPAG(CODPLPAG),
       CONSTRAINT FK_CODEMITENTE FOREIGN KEY (CODEMITENTE) REFERENCES TABUSUARIO(CODUSUR),
       CONSTRAINT FK_NUMCAR FOREIGN KEY (NUMCAR) REFERENCES TABCARGA(NUMCAR),
       FOREIGN KEY (CODFUNCFAT) REFERENCES TABUSUARIO(CODUSUR),
       FOREIGN KEY (CODFUNCCANCEL) REFERENCES TABUSUARIO(CODUSUR)
);

CREATE SEQUENCE TABPEDIDO_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TK_PEDIDO_NUMPED
BEFORE INSERT ON TABPEDIDO
FOR EACH ROW
  BEGIN
    IF :NEW.NUMPED IS NULL THEN
      SELECT TABPEDIDO_SEQ.NEXTVAL INTO :NEW.NUMPED FROM DUAL;
    END IF;
  END;
/

CREATE TABLE TABPEDIDOITENS (
       CODPROD NUMBER NOT NULL,
       NUMPED NUMBER NOT NULL,
       QT_ITEM NUMBER(20,6) NOT NULL,
       PVENDA NUMBER(18,6) NOT NULL,
       NUMCAR NUMBER(8),

       PRIMARY KEY (CODPROD, NUMPED),
       FOREIGN KEY (CODPROD) REFERENCES TABPRODUTO(CODPROD),
       FOREIGN KEY (NUMPED) REFERENCES TABPEDIDO(NUMPED)
);

ALTER TABLE TABPEDIDOITENS ADD TIPOENTREGA VARCHAR(2) NOT NULL;

ALTER TABLE TABPEDIDOITENS ADD CONSTRAINT CHK_TIPOENTREGA CHECK (TIPOENTREGA IN ('RP', 'EN', 'RI', 'C'));

COMMENT ON COLUMN TABPEDIDOITENS.TIPOENTREGA IS 'RP - RETIRA POSTERIOR | EN - ENTREGA | RI - RETIRADA IMEDIATA | C - CANCELADO';


CREATE TRIGGER TK_VLTOTALPED
AFTER INSERT ON TABPEDIDOITENS
REFERENCING NEW AS new OLD AS old
FOR EACH ROW
  BEGIN
         UPDATE TABPEDIDO SET VLTOTAL = VLTOTAL + NEW.PVENDA WHERE NUMPED = NEW.NUMPED;
  END;



SELECT * FROM TABCLIENTE;
